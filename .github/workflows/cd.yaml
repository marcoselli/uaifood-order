name: CD

on:
  pull_request:
    branches:
      - main

jobs:
  docker_integration:
    name: üê≥ Docker Build & Push
    runs-on: ubuntu-latest
    
    steps:
      - name: Verify branch origin  
        id: check_branch
        run: |
          BRANCH_NAME=${{ github.head_ref }}
          echo "PR branch origin: $BRANCH_NAME"
          
          if [[ "$BRANCH_NAME" =~ ^release\/([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Version detected: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "::error::This PR must be originated from branch: release/* (ex: release/1.0.0)."
            exit 1
          fi

      - name: Code checkout
        uses: actions/checkout@v4

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/uaifood-order:${{ steps.check_branch.outputs.version }} .

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/uaifood-order:${{ steps.check_branch.outputs.version }}

    outputs:
      version: ${{ steps.check_branch.outputs.version }}      

  sync_repo:
    name: üîÅ Sync Helm template repo
    runs-on: ubuntu-latest
    needs: docker_integration
    if: github.event.pull_request.base.ref == 'main'

    steps:
      - name: Update version on external repo
        uses: fjogeleit/yaml-update-action@v0.16.0
        with:
          valueFile: 'values.yaml'  
          propertyPath: 'version'                         
          value: ${{ needs.docker_integration.outputs.version }}
          repository: marcoselli/uaifood-helm-template    
          branch: master                                  
          createPR: false                                
          commitChange: true                              
          message: 'Update version to ${{ needs.docker_integration.outputs.version }}'
          token: ${{ secrets.SYNC_REPOSITORY_TOKEN }}   
        


