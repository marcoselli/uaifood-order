name: CI/CD

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  validation:
    name: üõ°Ô∏è Project validation
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

  build_test:
    name: üß™ Build && Tests
    runs-on: ubuntu-latest
    needs: validation
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Java setup
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Change Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Build && Run Tests
        run: ./gradlew build test

  sonarqube:
    if: github.event.pull_request.base.ref == 'main'    
    name: üìä SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Java setup
        uses: actions/setup-java@v4
        with: 
          java-version: '21'
          distribution: 'zulu'

      - name: Build project
        run: ./gradlew clean build -x test

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=marcoselli_uaifood-order
            -Dsonar.organization=marcoselli
            -Dsonar.sources=src/main/kotlin
            -Dsonar.tests=src/test/kotlin
            -Dsonar.test.inclusions=**/*Test*
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
            -Dsonar.language=kotlin
            -Dsonar.kotlin.version=1.9.25

  docker_integration:
    if: github.event.pull_request.base.ref == 'main'
    name: üê≥ Docker Build & Push
    runs-on: ubuntu-latest
    needs: sonarqube

    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Validate branch origin
        run: |
          BRANCH_NAME=${{ github.head_ref }}
          echo "Checking if $BRANCH_NAME comes from develop"

          if git merge-base --is-ancestor origin/develop origin/$BRANCH_NAME; then
            echo "‚úÖ Branch $BRANCH_NAME validated"
          else
            echo "::error::‚ùå Branch $BRANCH_NAME has a different origin!"
            exit 1
          fi
      
      - name: Check release branch pattern 
        id: check_branch
        run: |
          BRANCH_NAME=${{ github.head_ref }}
          echo "PR branch origin: $BRANCH_NAME"
          
          if [[ "$BRANCH_NAME" =~ ^release\/([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Version detected: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "::error::This PR must be originated from branch: release/* (ex: release/1.0.0)."
            exit 1
          fi

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/uaifood-order:${{ steps.check_branch.outputs.version }} .

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/uaifood-order:${{ steps.check_branch.outputs.version }}

    outputs:
      version: ${{ steps.check_branch.outputs.version }}

  sync_repo:
    name: üîÅ Sync Helm repository
    runs-on: ubuntu-latest
    needs: docker_integration

    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: marcoselli/uaifood-helm-template 
          path: infrastructure
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version on external repo
        uses: fjogeleit/yaml-update-action@v0.16.0
        with:
          valueFile: 'values.yaml'
          propertyPath: 'version'
          value: ${{ needs.docker_integration.outputs.version }}
          repository: marcoselli/uaifood-helm-template
          branch: master
          message: 'Update version to ${{ needs.docker_integration.outputs.version }}'
          force: true
          token: ${{ secrets.SYNC_REPOSITORY_TOKEN }}
          workDir: infrastructure
