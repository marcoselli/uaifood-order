name: CI + CD

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  validation:
    name: 🛡️ Project validation
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

  build_test:
    name: 🧪 Build && Tests
    runs-on: ubuntu-latest
    needs: validation

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Java setup
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Change Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Build && Run Tests
        run: ./gradlew build test

  sonarqube:
    name: 📊 SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build_test

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Java setup
        uses: actions/setup-java@v4
        with: 
          java-version: '21'
          distribution: 'zulu'
 
      - name: Build project
        run: ./gradlew clean build -x test
 
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=marcoselli_uaifood-order
            -Dsonar.organization=marcoselli
            -Dsonar.sources=src/main/kotlin
            -Dsonar.tests=src/test/kotlin
            -Dsonar.test.inclusions=**/*Test*
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
            -Dsonar.language=kotlin
            -Dsonar.kotlin.version=1.9.25

  cd:
    name: 🚀 CD (Docker Build & Push)
    runs-on: ubuntu-latest
    needs: sonarqube
    if: github.base_ref == 'main'
    
    steps:
      - name: Verify branch origin  
        id: check_branch
        run: |
          BRANCH_NAME=${{ github.head_ref }}
          echo "PR branch origin: $BRANCH_NAME"
          
          if [[ "$BRANCH_NAME" =~ ^release\/([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Version detected: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "::error::This PR must be originated from branch: release/* (ex: release/1.0.0)."
            exit 1
          fi

      - name: Code checkout
        uses: actions/checkout@v4

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/uaifood-order:${{ steps.check_branch.outputs.version }} .

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/uaifood-order:${{ steps.check_branch.outputs.version }}
